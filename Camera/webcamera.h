/*! \file webcamera.h
 *  \brief Заголовочный файл с описанием класса WebCamera
 *  \details Содержит объявление класса WebCamera, моделирующего встроенную веб-камеру.
 *           Класс наследует InputDevice и Camera, предоставляет настройку максимального
 *           разрешения, мегапикселей и максимальной частоты кадров, умеет записывать видео
 *           и обрабатывать входные текстовые события. Предназначен для симуляций захвата
 *           видео и тестирования поведения устройств ввода.
 */
#ifndef WEBCAMERA
#define WEBCAMERA
#include "input_device.h"
#include "camera.h"

/*! \class WebCamera
 *  \brief Модель встроенной веб-камеры
 *  \details WebCamera объединяет интерфейсы устройства ввода и камеры, хранит параметры
 *           максимального разрешения, количество мегапикселей и предельную частоту кадров.
 *           Класс позволяет настроить характеристики камеры, получить их и сымитировать
 *           запись видеопотока или приём входных данных от пользователя или драйвера.
 */
class WebCamera : public InputDevice, public Camera {
public:
    /*! \brief Конструктор по умолчанию
     *  \details Инициализирует камеру значениями по умолчанию.
     */
    WebCamera();

    /*! \brief Конструктор с инициализацией параметров камеры
     *  \param maxResolution Строковое максимальное разрешение камеры (например "1920x1080")
     *  \param megapixels Количество мегапикселей камеры
     *  \param maxFps Максимальная частота кадров в кадрах в секунду
     *  \details Конструктор задаёт ключевые характеристики веб-камеры для моделирования
     *           возможностей захвата видео и совместимости с подсистемой отображения.
     */
    WebCamera(const std::string &maxResolution, double megapixels, int maxFps);

    /*! \brief Установить максимальное разрешение камеры
     *  \param maxResolution Строка вида "widthxheight"
     *  \details Метод обновляет значение максимального разрешения камеры.
     */
    void SetMaxResolution(const std::string &maxResolution);

    /*! \brief Получить максимальное разрешение камеры
     *  \return Строка с максимальным разрешением
     */
    std::string GetMaxResolution() const;

    /*! \brief Установить количество мегапикселей
     *  \param megapixels Значение мегапикселей
     */
    void SetMegapixels(double megapixels);

    /*! \brief Получить количество мегапикселей
     *  \return Значение мегапикселей
     */
    double GetMegapixels() const;

    /*! \brief Установить максимальную частоту кадров
     *  \param maxFps Частота в кадрах в секунду
     */
    void SetMaxFps(int maxFps);

    /*! \brief Получить максимальную частоту кадров
     *  \return Частота в кадрах в секунду
     */
    int GetMaxFps() const;

    /*! \brief Записать видео заданной длительности
     *  \param seconds Продолжительность записи в секундах
     *  \return Текстовое представление результата записи или status message
     *  \details Метод симулирует захват видеопотока в течении указанного времени и возвращает
     *           строку с описанием полученного файла или состояния записи.
     */
    std::string MakeVideo(int seconds) override;

private:
    std::string maxResolution_{""}; /*!< Максимальное разрешение камеры */
    double megapixels_{0.0}; /*!< Количество мегапикселей */
    int maxFps_{0}; /*!< Максимальная частота кадров */
};

#endif
